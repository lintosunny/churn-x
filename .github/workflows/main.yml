name: ML Service Workflow
on:
  push:
    branches:
      - main
    paths:
      - 'ml/**'  # Only trigger when ML folder changes

permissions:
  id-token: write
  contents: read
jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4  # Updated to v4
      - name: Lint ML code
        run: echo "Linting ML service repository"
      - name: Run ML unit tests
        run: echo "Running ML service unit tests"
  
  build-and-push-ecr-image:
    name: Continuous Delivery
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4  # Updated to v4
      
      - name: Install Utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4  # Updated to v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2  # Updated to v2
      
      - name: Build, tag, and push ML service image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
          IMAGE_TAG: latest
        run: |
          # Build ML service docker container from ml directory
          # using the dockerfile in ml/dockerfile
          docker build -f ml/dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ml/
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT  # Updated output syntax
  
  continuous-deployment:
    name: Continuous Deployment
    needs: build-and-push-ecr-image
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4  # Updated to v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4  # Updated to v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2  # Updated to v2
      
      - name: Stop and remove existing ML service container
        run: |
          docker stop ml-service || true
          docker rm ml-service || true
        continue-on-error: true
      
      - name: Pull latest ML service image
        run: |
          docker pull ${{secrets.AWS_ECR_LOGIN_URI}}/${{secrets.ECR_REPOSITORY_NAME}}:latest
      
      - name: Run ML Service Docker Container
        run: |
          docker run -d \
            -p 8000:8000 \
            --name=ml-service \
            --restart=unless-stopped \
            -e 'AWS_ACCESS_KEY_ID=${{secrets.AWS_ACCESS_KEY_ID}}' \
            -e 'AWS_SECRET_ACCESS_KEY=${{secrets.AWS_SECRET_ACCESS_KEY}}' \
            -e 'AWS_REGION=${{secrets.AWS_REGION}}' \
            ${{secrets.AWS_ECR_LOGIN_URI}}/${{secrets.ECR_REPOSITORY_NAME}}:latest
      
      - name: Clean previous images and containers
        run: |
          docker system prune -f